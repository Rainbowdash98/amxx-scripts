/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <codmod>
#include <fakemeta_util>
#include <hamsandwich>

#define DMG_BULLET (1<<1)
#define MAX 20

new nazwa[] = "Piotr";
new nazwa_kodowa[] = "No nie?";
new opis[] = "Portafi byc niewidzialny przez 7 sek. natychmiastowe zabicie z noza";
new grawitacja = 10;
new inteligencja = 0;
new zdrowie = -10;
new wytrzymalosc = 0;
new kondycja = 20;
new przeladowanie = 0;
new regeneracja = 10

new bool:ma_klase[MAX + 1];
new uzyl[MAX + 1];

new Count[MAX + 1];
new wartosc[MAX + 1];

public plugin_init() {
	register_plugin(nazwa, "0.69", "ToRRent")
	RegisterHam(Ham_Spawn, "player", "Spawn", 1);
	
	cod_register_class(nazwa, opis, grawitacja, zdrowie, kondycja, inteligencja, wytrzymalosc, nazwa_kodowa);
	RegisterHam(Ham_TakeDamage, "player", "TakeDamage");
	register_event("CurWeapon", "CurWeapon", "be", "1=1");
}

public cod_class_enabled(id)
{
	COD_MSG_SKILL_D;
	show_hudmessage(id, "Aby uruchomic kamuflaz wcisnij USE (domyslnie E)^nPamietaj ze kamuflaz wylacza zmiana broni lub sprint");
	ma_klase[id] = true;
	uzyl[id] = false;
}

public cod_class_disabled(id)
{
	ma_klase[id] = false;
	fm_set_rendering(id,kRenderFxGlowShell,0,0,0 ,kRenderTransAlpha, 255);
}

public plugin_precache()
{
	precache_model("models/QTM_Codmod/v_machete.mdl");
	precache_model("models/QTM_Codmod/p_machete.mdl");
}

public Spawn(id)
{
	if(!is_user_alive(id) || !is_user_connected(id))
		return PLUGIN_CONTINUE;
		
	if(ma_klase[id])
		uzyl[id] = false
	
	return PLUGIN_CONTINUE;
}

public cod_class_skill_used(id)
{
	if(uzyl[id])
	{
		client_print(id, print_center, "Kamuflazu mozna uzyc tylko raz na runde !");
	}
	else
	{
		
		Start(id);
		uzyl[id] = true;
		//COD_MSG_EXP_P;
		Display_Fade(id, 4<<12, 7<<12, 2<<12, 255, 255, 255, 80); 
	}
}

public Start(id)
{
	Count[id] = 7
	wartosc[id] = 60-cod_get_user_intelligence(id);
	fm_set_rendering(id,kRenderFxGlowShell,0,0,0 ,kRenderTransAlpha, wartosc[id]);
        
	if(task_exists(id + 7123))
	{
		remove_task(id + 7123)
	}
	set_task(1.0, "CDN", id + 7123, _, _, "b")
        
	return PLUGIN_CONTINUE
}
public CDN(task_id)
{
	new id = task_id - 7123
        
	if(is_user_alive(id))
	{
		set_hudmessage(0, 255, 100, 0.03, 0.76, 2, 0.02, 1.0, 0.01, _, 1);
		show_hudmessage(id, "Kamuflaz wylaczy sie za %d sek.", Count[id]);
	}
        
	Count[id] --; 
	wartosc[id] = 40-cod_get_user_intelligence(id);
	fm_set_rendering(id,kRenderFxGlowShell,0,0,0 ,kRenderTransAlpha, wartosc[id]);
        
	if(Count[id] <= 0)
	{
		fm_set_rendering(id,kRenderFxGlowShell,0,0,0 ,kRenderTransAlpha, 255);
		if(task_exists(task_id))
		{
			remove_task(task_id)
		}
	}
}

public TakeDamage(this, idinflictor, idattacker, Float:damage, damagebits)
{
	if(!is_user_connected(idattacker))
		return HAM_IGNORED;
	
	if(ma_klase[idattacker] && get_user_weapon(idattacker) == CSW_KNIFE && damagebits & DMG_BULLET && damage > 1.0)
	{
		cs_set_user_armor(this, 0, CS_ARMOR_NONE);
		cod_inflict_damage(idattacker, this, float(get_user_health(this))-damage+10.0, 0.1, idinflictor, damagebits);
	}
		
	return HAM_IGNORED;
}

public CurWeapon(id)
{
	new weapon = read_data(2);

	if(ma_klase[id] && weapon == CSW_KNIFE)
	{
		set_pev(id, pev_viewmodel2, "models/QTM_Codmod/v_machete.mdl");
		set_pev(id, pev_weaponmodel2, "models/QTM_Codmod/p_machete.mdl");
		/*entity_set_string(id, EV_SZ_viewmodel, "models/QTM_Codmod/v_machete.mdl");
		entity_set_string(id, EV_SZ_weaponmodel, "models/QTM_Codmod/p_machete.mdl");*/
	}
}

stock Display_Fade(id,duration,holdtime,fadetype,red,green,blue,alpha)
{
	message_begin(MSG_ONE, get_user_msgid("ScreenFade"),{0,0,0},id);
	write_short(duration);
	write_short(holdtime);
	write_short(fadetype);
	write_byte(red);
	write_byte(green);
	write_byte(blue);
	write_byte(alpha);
	message_end();
}
