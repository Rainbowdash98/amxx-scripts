/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <codmod>
#include <acg>

new const perk_name[] = "Modul Odrzutowy";
new const perk_desc[] = "Wyrzuca cie z sila 666(+inteligencja), modul laduje sie co 5 sekund";

#define MAX 20
new bool:ma_perk[MAX + 1];
new Float:ostatni_skok[MAX + 1];
new Odliczanie[MAX+1]

public plugin_init()
 {
	register_plugin(perk_name, "1.0", "QTM_Peyote");
	
	cod_register_perk(perk_name, perk_desc);
	
}

public cod_perk_enabled(id)
{
	COD_MSG_SKILL_D;
	show_hudmessage(id, "Aby uzyc perku uzyj komendy useperk");
	ma_perk[id] = true;
	
	return COD_CONTINUE
}
public cod_perk_disabled(id)
	ma_perk[id] = false;

public cod_perk_used(id)
{
	new flags = pev(id, pev_flags);
	
	if(flags & FL_ONGROUND && get_gametime() > ostatni_skok[id]+5.0)
	{
		ostatni_skok[id] = get_gametime();
		new Float:velocity[3];
		velocity_by_aim(id, 666+cod_get_user_intelligence(id), velocity);
		velocity[2] = random_float(265.0,285.0);
		set_pev(id, pev_velocity, velocity);
		info(id);
	}
}

public info(id)
{
	Odliczanie[id] = 5
        
	if(task_exists(id + 3831))
	{
		remove_task(id + 3831)
	}
	set_task(1.0, "Koniec", id + 3831, _, _, "b")
        
	return PLUGIN_CONTINUE
}

public Koniec(task_id)
{
	new id = task_id - 3831
        
	if(is_user_alive(id) && Odliczanie[id] > 0 )
	{
		new text[51];
		formatex(text, 50, "Ladowanie modulu: %d sek", Odliczanie[id])
		acg_drawtext(id, text, 100, 200, 255, 1.1, -1.0, 0.88, 0, -1)
		//set_hudmessage(255, 255, 255, -1.0, 0.85, 0, 0.02, 1.0, 0.01, 0.3, -1);
		//show_hudmessage(0, "EMP wylaczy sie za %d sek.", Odliczanie[id]);
	}
        
	Odliczanie[id] --; 

	if(Odliczanie[id] <= 0)
	{
		if(task_exists(task_id))
		{
			remove_task(task_id)
		}
	}
}
