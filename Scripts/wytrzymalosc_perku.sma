/* Plugin generated by AMXX-Studio */
#include <amxmodx>
#include <amxmisc>
#include <codmod>
#include <hamsandwich>
#include <tutor>

#define PLUGIN "[COD] Wytrzymalosc Perku"
#define VERSION "1.2"
#define AUTHOR "QTM_Peyote (=ToRRent= Edit)"

#define MAX 20
#define DMG_BULLET (1<<1)
new cvar_max_wytrzymalosc;
new wytrzymalosc_perku[MAX+1];

/*---------

Aby korzystac z natywow
cod_get_perk_durability oraz cod_set_perk_durability
musisz dodac do swojego pluginu:

native cod_set_perk_durability(id, wytrzymalosc); // Ustawia wytrzymalosc perku gracza.
native cod_get_perk_durability(id); // Pobiera wytrzymalosc perku gracza.

-----------*/

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_event("DeathMsg", "Death", "ade");
	RegisterHam(Ham_TakeDamage, "player", "TakeDamage")
	cvar_max_wytrzymalosc = register_cvar("cod_maxperkdurability", "100");
	
	tutorInit();
}

public plugin_natives()
{
	register_native("cod_get_perk_durability", "PobierzWytrzymalosc", 1);
	register_native("cod_set_perk_durability", "UstawWytrzymalosc", 1);
}	

public plugin_precache()
{
	tutorPrecache();
}
	
public cod_perk_changed(id, perk)
{
	static poprzedni_perk[MAX+1];
	
	if(poprzedni_perk[id] == perk) return;
	
	wytrzymalosc_perku[id] = perk? get_pcvar_num(cvar_max_wytrzymalosc): 0;
	
	poprzedni_perk[id] = perk;
}
	
public Death()
{
	new id = read_data(2);
	
	if(!cod_get_user_perk(id)) return;
	
	new randomn = random_num(10, 35);
	wytrzymalosc_perku[id] -= min(randomn, wytrzymalosc_perku[id]);
	if(wytrzymalosc_perku[id] <= 0)
	{
		cod_set_user_perk(id, 0);
		/*set_hudmessage(40, 255, 0, 0.02, 0.23, 1, 1.0, 4.5, 0.3, 0.5, -1);
		show_hudmessage(id, "^n^n^n^n^n^n^nTwoj perk ulegl zniszczeniu !");*/
		tutorek(id);
	}
}

public TakeDamage(this, inflictor, idattacker, Float:damage, damagebits)
{
	if(!is_user_alive(this) || !is_user_connected(this)) 
		return;	
	
	if(!(damagebits & DMG_BULLET))	
		return;
		
	new wart[MAX+1];
	if(damage <= 10)
		wart[this] = 0
	else if(damage <= 20)
		wart[this] = 1
	else if(damage <= 35)
		wart[this] = 2
	else if(damage <= 50)
		wart[this] = 3	
	else if(damage <= 70)
		wart[this] = 4
	else if(damage <= 90)
		wart[this] = 5
	else if(damage <= 115)
		wart[this] = 6
	else if(damage <= 140)
		wart[this] = 7
	else if(damage <= 170)
		wart[this] = 8
	else if(damage <= 200)
		wart[this] = 9		
	else if(damage > 201)
		wart[this] = 10
		
	if(this != idattacker)
	{
		if(damage > 10 && wytrzymalosc_perku[this] > 0)
		{
			wytrzymalosc_perku[this] -= min(wart[this], wytrzymalosc_perku[this])
		}
		else return;
	}
	if(wytrzymalosc_perku[this] <= 0)
	{
		cod_set_user_perk(this, 0);
		/*set_hudmessage(40, 255, 0, 0.02, 0.23, 1, 1.0, 4.0, 0.3, 0.5, -1);
		show_hudmessage(id, "^n^n^n^n^n^n^nTwoj perk ulegl zniszczeniu !");*/
		tutorek(this);
	}
}

public UstawWytrzymalosc(id, wartosc)
{
	new max_wytrzymalosc = get_pcvar_num(cvar_max_wytrzymalosc);
	wytrzymalosc_perku[id] = (wartosc > max_wytrzymalosc)? max_wytrzymalosc: wartosc;
}

public PobierzWytrzymalosc(id)
	return wytrzymalosc_perku[id];

public tutorek(id) {
	tutorMake(id,TUTOR_RED,4.0, "Twoj perk ulegl zniszczeniu !")
	client_cmd(id, "spk events/tutor_msg.wav")
}
