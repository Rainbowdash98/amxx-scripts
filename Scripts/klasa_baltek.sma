/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <cstrike>
#include <torreinc>
#include <hamsandwich>
#include <fakemeta>
#include <fun>
#include <acg>

#define DMG_BULLET (1<<1)
#define MAX 20

new const nazwa[] = "Bartek [VIP]";
new const nazwa_kodowa[] = "Przywodca";
new const opis[] = "Ukrywa przyjaciol w promieniu 100u(+int), nie slychac jego krokow";
new grawitacja = 0;
new inteligencja = 0;
new zdrowie = 25;
new wytrzymalosc = 25;
new kondycja = 0;
new przeladowanie = 10;
new regeneracja = 20;

new bool:ma_klase[MAX + 1];
new jest_ukrywany[MAX + 1];

//new g_info_delay[MAX + 1];

new mapname[32];

//new sprite_line;

public plugin_init() {
	register_plugin(nazwa, "1.0", "QTM_Peyote");
	
	cod_register_class(nazwa, opis, grawitacja, zdrowie, kondycja, inteligencja, wytrzymalosc, przeladowanie, regeneracja,  nazwa_kodowa);
	register_forward(FM_AddToFullPack, "FwdAddToFullPack", 1);
	register_forward(FM_PlayerPreThink, "PreThink");
	//register_event("DeathMsg", "Death", "ade");
	
	get_mapname(mapname, 31)
}

/*public plugin_precache()
	sprite_line = precache_model("sprites/dot.spr");*/

public cod_class_enabled(id)
{
	if(!(get_user_frags(id) > 10 ) && !is_user_bot(id))
	{
		client_print(id, print_center, "%s Dostepny od zdobycia 10 fragow na mapie", nazwa);
		client_cmd(id, "say /klasa");
		return COD_STOP;
	}
	/*if(!(get_user_flags(id) & ADMIN_LEVEL_G))
	{
		client_print(id, print_center, "%s Dostepny tylko dla graczy VIP", nazwa);
		client_cmd(id, "say /klasa");
		return COD_STOP;
	}*/
		
	else
	{
		if(equali(mapname, "gg_", 3) || equali(mapname, "aim_", 4) || equali(mapname, "fun_", 4) || equali(mapname, "awp_", 4))
		{
			return COD_CONTINUE;
		}
		else
		{
			acg_drawtext(id, 0.04, 0.69, "Jestes niewidzialny z dalekich odleglosci^nJesli podejdziesz do kumpla z teamu, ukryjesz go", 0, 212, 255, 255, 0.0, 2.5, 4.5, 0, TS_NONE, 0, 1, 11)
		}
		set_user_footsteps(id, 1);
		ma_klase[id] = true;
	}
	
	return COD_CONTINUE;
}
public cod_class_disabled(id)
{
	ma_klase[id] = false;
	set_user_footsteps(id, 0);
}

public PreThink(id)
{
	if(equali(mapname, "gg_", 3) || equali(mapname, "aim_", 4) || equali(mapname, "fun_", 4) || equali(mapname, "awp_", 4))
		return ;
		
	if(!is_user_alive(id))
		return;
	
	if(!ma_klase[id])
		return;
	
	new Float:origin[3], Float:dist = float(cod_get_user_intelligence(id))+100.0;
	
	pev(id, pev_origin, origin);
	/*static Float:zmiana[MAX + 1];
		
	zmiana[id] += 0.5;
	if(zmiana[id] > 360.0)
		zmiana[id] = 0.0;
		
	new LineBegin[3], LineEnd[3];
	
	for(new i = 0; i < 2; i++)
	{
		LineBegin[0] = floatround(origin[0]-floatsin(zmiana[id]+i*90.0, degrees)*dist);
		LineBegin[1] = floatround(origin[1]-floatcos(zmiana[id]+i*90.0, degrees)*dist);
		LineBegin[2] = floatround(origin[2]);
				
		LineEnd[0] = floatround(origin[0]+floatsin(zmiana[id]+i*90.0, degrees)*dist);
		LineEnd[1] = floatround(origin[1]+floatcos(zmiana[id]+i*90.0, degrees)*dist);
		LineEnd[2] = floatround(origin[2]);
		
		for(new i = 0; i <= 32; i++)
		{
			if(!is_user_connected(i))
				continue;
				
			if(get_user_team(i) != get_user_team(id))
				continue;
				
			Create_Line(i, LineBegin, LineEnd);
		}
	}*/
			

	arrayset(jest_ukrywany, 0, MAX + 1);
	
	new index = -1;
	while((index = engfunc(EngFunc_FindEntityInSphere, index, origin, dist))) 
	{
		if(!is_user_alive(index))
			continue;
		
		if(get_user_team(index) != get_user_team(id) || ma_klase[index])
			continue;
		
		if(acg_userstatus(index) && !is_user_bot(index) && is_user_connected(index))
		{
			//if((g_info_delay[id]) > get_gametime())
				//return;
		
			//g_info_delay[id] = floatround((get_gametime() + 0.3)) // delay 0.3 second
			
			//acg_drawtext(index, "Jestes Ukryty!^nNie strzelaj, aby pozostac niezauwazonym" ,0, 212, 255, 0.2, 0.04, 0.69, 0, 27)
			acg_drawtext(id, 0.04, 0.69, "Stoisz obok Bartka wiec jestes ukryty !^n Nie strzelaj, aby pozostac niezauwazonym", 0, 212, 255, 255, 0.0, 0.0, 0.1, 0, TS_NONE, 0, 0, 12)
		}
		
		jest_ukrywany[index] = id;

	}
	
}

public FwdAddToFullPack(es_handle, e, ent, host, hostflags, player, pSet)
{
	if(equali(mapname, "gg_", 3) || equali(mapname, "aim_", 4) || equali(mapname, "fun_", 4) || equali(mapname, "awp_", 4))
		return ;

	if(!player)
		return;
	
	if(pev(ent, pev_button) & IN_ATTACK)
		return;
		
			
	if(ma_klase[ent])
	{
		set_es(es_handle, ES_RenderMode, kRenderTransAdd);
		set_es(es_handle, ES_RenderFx, /*kRenderFxGlowShell*/ kRenderFxHologram); 
		set_es(es_handle, ES_RenderColor, {0, 100, 255});
		set_es(es_handle, ES_RenderAmt, 35);
		return;
	}
	
	if(!jest_ukrywany[ent])
		return;
	
	if(get_user_team(ent) == get_user_team(host))
	{
		set_es(es_handle, ES_RenderMode, kRenderTransAdd);
		set_es(es_handle, ES_RenderAmt, 10);
		return;
	}
	
	set_es(es_handle, ES_Effects, EF_NODRAW);
}


/*stock Create_Line(id, start[], stop[])
{
	message_begin(MSG_ONE,SVC_TEMPENTITY,{0,0,0},id)
	write_byte(0)
	write_coord(start[0])
	write_coord(start[1])
	write_coord(start[2])
	write_coord(stop[0])
	write_coord(stop[1])
	write_coord(stop[2])
	write_short(sprite_line)
	write_byte(1)
	write_byte(5)
	write_byte(1)
	write_byte(3)
	write_byte(0)
	write_byte(0)	// RED
	write_byte(100)	// GREEN
	write_byte(255)	// BLUE					
	write_byte(255)	// brightness
	write_byte(5)
	message_end()
}*/
