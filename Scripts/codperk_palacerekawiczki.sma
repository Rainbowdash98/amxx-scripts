/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <codmod>
#include <fakemeta_util>
#include <acg>

#define TASK_PALACE_REKAWICZKI -946

new const perk_name[] = "Palace Rekawiczki";
new const perk_desc[] = "Co 20 sekund dostajesz granat wybuchowy";
#define MAX 20

new bool:ma_perk[MAX + 1];
new Odliczanie[MAX+1]

public plugin_init() 
{
	register_plugin(perk_name, "1.0", "QTM_Peyote");
	
	cod_register_perk(perk_name, perk_desc);
}

public cod_perk_enabled(id)
{
	ma_perk[id] = true;
	fm_give_item(id, "weapon_hegrenade");
	set_task(20.0, "PalaceRekawiczki", id+TASK_PALACE_REKAWICZKI);
	info(id);
}

public cod_perk_disabled(id)
{
	ma_perk[id] = false;
}

public PalaceRekawiczki(id)
{
	id -= TASK_PALACE_REKAWICZKI;
	
	if(!is_user_connected(id) || !is_user_alive(id))
		return PLUGIN_CONTINUE;
		
	if(ma_perk[id])
	{
		set_task(20.0, "PalaceRekawiczki", id+TASK_PALACE_REKAWICZKI);
		fm_give_item(id, "weapon_hegrenade");
		info(id);
		//cod_give_weapon(id, CSW_HEGRENADE);
	}
	
	return PLUGIN_CONTINUE;
}

public info(id)
{
	Odliczanie[id] = 20
        
	if(task_exists(id + 2831))
	{
		remove_task(id + 2831)
	}
	set_task(1.0, "Koniec", id + 2831, _, _, "b")
        
	return PLUGIN_CONTINUE
}

public Koniec(task_id)
{
	new id = task_id - 2831
        
	if(is_user_alive(id) && (Odliczanie[id] > 0 ))
	{
		new text[51];
		formatex(text, 50, "nowy granat He za: %d sek", Odliczanie[id])
		acg_drawtext(id, text, 100, 200, 255, 1.1, -1.0, 0.88, 0, -1)
		//set_hudmessage(255, 255, 255, -1.0, 0.85, 0, 0.02, 1.0, 0.01, 0.3, -1);
		//show_hudmessage(0, "EMP wylaczy sie za %d sek.", Odliczanie[id]);
	}
        
	Odliczanie[id] --; 

	if(Odliczanie[id] <= 0)
	{
		if(task_exists(task_id))
		{
			remove_task(task_id)
		}
	}
}
