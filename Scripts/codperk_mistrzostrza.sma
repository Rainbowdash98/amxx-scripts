/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <engine>
#include <cstrike>
#include <fakemeta>
#include <fun>
#include <hamsandwich>
#include <colorchat>
#include <codmod>
#include <acg>

#define PLUGIN "Knife Throw"
#define VERSION "1.0"
#define AUTHOR "DarkGL"

#define nazwa "Mistrz Ostrza"
#define opis "Co runde dostajesz LW noze do rzucania"

#define MAX 20

new wartosc_perku[MAX + 1], ma_perk[MAX + 1];

new ile_nozy[MAX + 1];
new blood
new blood2

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_cvar("amx_knifedamage_mw2","150")
	register_cvar("amx_knifespeed_mw2","850")
	register_cvar("amx_knifegravity_mw2","0.2")
	RegisterHam(Ham_Spawn, "player", "Spawn", 1);
	register_touch("throw_knife", "player", "knife_touch")
	register_touch("throw_knife", "worldspawn",		"touchWorld")
	register_touch("throw_knife", "func_wall",		"touchWorld")
	register_touch("throw_knife", "func_wall_toggle",	"touchWorld")
	
	cod_register_perk(nazwa, opis, 4, 7);
}

public plugin_precache(){
	precache_model("models/w_throw.mdl");
	blood = precache_model("sprites/blood.spr")
	blood2 = precache_model("sprites/bloodspray.spr")
	precache_sound("player/headshot1.wav")
	precache_sound("player/die1.wav")
}

public cod_perk_enabled(id, wartosc)
{
	ma_perk[id] = true;
	COD_MSG_SKILL_D;
	show_hudmessage(id, "Aby rzucic nozem^n uzyj komendy useperk");
	//ColorChat(id, GREEN, "Perk %s, zostal stworzony przez www.PluginyMody.webd.pl", nazwa);
	wartosc_perku[id] = wartosc;
	ile_nozy[id] = wartosc_perku[id];
}
	
public cod_perk_disabled(id)
{
	ma_perk[id] = false;
	wartosc_perku[id] = 0;
	acg_removedrawnimage(id, 3, 1)
}
	
public cod_perk_used(id)
	paint_fire(id);

public Spawn(id)
{
	if(!is_user_alive(id) || !is_user_connected(id) || !ma_perk[id])
		return PLUGIN_CONTINUE;
		
	ile_nozy[id] = wartosc_perku[id];
	ShowAmmo(id)
	
	return PLUGIN_CONTINUE;
}

public touchWorld(Toucher, Touched){
	remove_entity(Toucher)
	return PLUGIN_HANDLED;
	
}

public knife_touch(Toucher, Touched){
	new kid = entity_get_edict(Toucher, EV_ENT_owner)
	new vic = entity_get_edict(Toucher, EV_ENT_enemy)
	if(is_user_alive(Touched)) 
	{
		new bool:zyje = true;
		if(kid == Touched || vic == Touched)
		{
			return ;
		}
		if(get_cvar_num("mp_friendlyfire") == 0 && get_user_team(Touched) == get_user_team(kid)) 
		{
			return ;
		}
		
		new Float:Random_Float[3]
		for(new i = 0; i < 3; i++) Random_Float[i] = random_float(-50.0, 50.0)
		Punch_View(Touched, Random_Float)
		
		if(get_cvar_num("amx_knifedamage_mw2") >= get_user_health(Touched)){
			zyje = false;
		}
		new origin[3];
		get_user_origin(Touched,origin)
		origin[2] += 25
		if(zyje == true){
			if(get_user_team(Touched) == get_user_team(kid)) 
			{
				new name[MAX + 1]
				get_user_name(kid,name,32)
				client_print(0,print_chat,"%s Zaatakowal swojego",name)
			}
			message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
			write_byte(TE_BLOODSPRITE)
			write_coord(origin[0])
			write_coord(origin[1])
			write_coord(origin[2])
			write_short(blood2)
			write_short(blood)
			write_byte(229)
			write_byte(25)
			message_end()
			set_user_health(Touched,get_user_health(Touched) - get_cvar_num("amx_knifedamage_mw2"));
			emit_sound(Touched, CHAN_ITEM, "player/headshot1.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
		}
		
		else
		{
			if(get_user_team(Touched) == get_user_team(kid)) {
				set_user_frags(kid, get_user_frags(kid) - 1)
				client_print(kid,print_center,"Zabiles swojego !")
			}
			else {
				set_user_frags(kid, get_user_frags(kid) + 1)
			}
			
			new gmsgScoreInfo = get_user_msgid("ScoreInfo")
			new gmsgDeathMsg = get_user_msgid("DeathMsg")
			
			
			
			message_begin(MSG_BROADCAST,SVC_TEMPENTITY)
			write_byte(TE_BLOODSPRITE)
			write_coord(origin[0])
			write_coord(origin[1])
			write_coord(origin[2])
			write_short(blood2)
			write_short(blood)
			write_byte(229)
			write_byte(25)
			message_end()
			
			//Zabijam tego co dostal i blokuje wiadomosci
			set_msg_block(gmsgDeathMsg,BLOCK_ONCE)
			set_msg_block(gmsgScoreInfo,BLOCK_ONCE)
			user_kill(Touched,1)
			
			//zmieniam ilosc fragow w tablicy zabojcy
			message_begin(MSG_ALL,gmsgScoreInfo)
			write_byte(kid)
			write_short(get_user_frags(kid))
			write_short(get_user_deaths(kid))
			write_short(0)
			write_short(get_user_team(kid))
			message_end()
			
			//zmieniam ilosc zginiec w tablicy ofiary
			message_begin(MSG_ALL,gmsgScoreInfo)
			write_byte(Touched)
			write_short(get_user_frags(Touched))
			write_short(get_user_deaths(Touched))
			write_short(0)
			write_short(get_user_team(Touched))
			message_end()
			
			//Pokazuje wiadomosc o zabiciu
			message_begin(MSG_ALL,gmsgDeathMsg,{0,0,0},0)
			write_byte(kid)
			write_byte(Touched)
			write_byte(0)
			write_string("knife")
			message_end()
			emit_sound(Touched, CHAN_ITEM, "player/die1.wav", 1.0, ATTN_NORM, 0, PITCH_NORM)
		}
		//usuwam noz
		remove_entity(Toucher)
	}
}

public paint_fire(id)
{
	new ent = create_entity("info_target")
	if (pev_valid(ent) && is_user_alive(id))
	{
		if(ile_nozy[id]-- < 1)
		{
			client_print(id, print_center, "Wykorzystales juz wszystkie noze !");
			return 0;
		}
			
		new Float:vangles[3], Float:nvelocity[3], Float:voriginf[3], vorigin[3];
		
		set_pev(ent, pev_owner, id);
		set_pev(ent, pev_classname, "throw_knife");
		engfunc(EngFunc_SetModel, ent, "models/w_throw.mdl");
		set_pev(ent, pev_gravity, get_cvar_float("amx_knifegravity_mw2"));	
		get_user_origin(id, vorigin, 1);
		
		IVecFVec(vorigin, voriginf);
		set_pev(ent,pev_origin,voriginf)
		
		static Float:player_angles[3]
		pev(id, pev_angles, player_angles)
		player_angles[2] = 0.0
		set_pev(ent, pev_angles, player_angles);
		
		pev(id, pev_v_angle, vangles);
		set_pev(ent, pev_v_angle, vangles);
		pev(id, pev_view_ofs, vangles);
		set_pev(ent, pev_view_ofs, vangles);
		
		new veloc = get_cvar_num("amx_knifespeed_mw2")
		
		set_pev(ent, pev_movetype, MOVETYPE_TOSS);
		set_pev(ent, pev_solid, 2);
		velocity_by_aim(id, veloc, nvelocity);	
		
		set_pev(ent, pev_velocity, nvelocity);
		set_pev(ent, pev_effects, pev(ent, pev_effects) & ~EF_NODRAW);
		set_pev(ent,pev_sequence,0)
		set_pev(ent,pev_framerate,1.0)
		
		entity_set_edict(ent, EV_ENT_owner, id)
		ShowAmmo(id);
	}
	return ent;
}

public Punch_View(id, Float:ViewAngle[3])
{
	set_pev(id, pev_punchangle, ViewAngle)
}
ShowAmmo(id)
{ 
	if(acg_userstatus(id))
	{
		acg_removedrawnimage(id, 3, 1)
		new ammo[51] 
		formatex(ammo, 50, "Liczba nozy: %i/%i",ile_nozy[id], wartosc_perku[id])
		acg_drawtext(id, ammo, 10, 255, 100, -0.1, -1.0, 0.9, 0, 1)
	}
} 
