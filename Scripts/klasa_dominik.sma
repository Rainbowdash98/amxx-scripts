/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <torreinc>
#include <fakemeta>
#include <fakemeta_util>
#include <engine>
#include <hamsandwich>
#include <acg>

#define MAX 20

new const g_szNazwaKlasy[] = "Dominik [VIP]";
new const g_szNazwaKodowa[] = "Nowe Buty";
new const g_szOpisKlasy[] = "Ma 2 kupy ktore stawia na mapie, +10 dmg z noza";

new const g_iGrawitacja = 15;
new const g_iZdrowie = 0;
new const g_iKondycja = 15;
new const g_iInteligencja = 0;
new const g_iWytrzymalosc = 0;
new const g_iprzeladowanie = 0;
new const g_iregeneracja = 0;

new const model[] = "models/QTM_CodMod/stolec.mdl"

new ilosc_kup[MAX + 1];
new bool:ma_klase[MAX + 1];

//new sprite_blast;
new mapname[32];

public plugin_init() {
	
	register_plugin(g_szNazwaKlasy, "0.3", "MarWit (ToRRent edit)")
	cod_register_class(g_szNazwaKlasy, g_szOpisKlasy, g_iGrawitacja, g_iZdrowie, g_iKondycja, g_iInteligencja, g_iWytrzymalosc,g_iprzeladowanie, g_iregeneracja,  g_szNazwaKodowa)
	
	register_event("HLTV", "NowaRunda", "a", "1=0", "2=0");
	register_event("DeathMsg", "DeathEvent", "a");
	register_event("ResetHUD", "ResetHUD", "abe");
	RegisterHam(Ham_TakeDamage, "player", "TakeDamage");
	
	register_touch("sraka", "player",  "DotykMiny");
	get_mapname(mapname, 31)
}

public plugin_precache()
{
	precache_model(model);
	//sprite_blast = precache_model("sprites/dexplo.spr");
	
	precache_sound("QTM_CodMod/fart.wav");
	precache_sound("QTM_CodMod/fart_long.wav");
}

public cod_class_enabled(id)
{
	if(!(get_user_frags(id) > 10 ) && !is_user_bot(id))
	{
		client_print(id, print_center, "%s Dostepny od zdobycia 10 fragow na mapie", g_szNazwaKlasy);
		client_cmd(id, "say /klasa");
		return COD_STOP;
	}
	else
	{
		if(equali(mapname, "gg_", 3) || equali(mapname, "aim_", 4) || equali(mapname, "fun_", 4) || equali(mapname, "awp_", 4))
		{
			return COD_CONTINUE;
		}
		else
		{
			acg_drawtext(id, 0.04, 0.69, "Aby postawic na mapie kupe wcisnij USE (domyslnie E)", 0, 212, 255, 255, 0.0, 2.5, 4.5, 0, TS_NONE, 0, 1, 11)
		}
		//COD_MSG_SKILL_D;
		//show_hudmessage(id, "Aby postawic na mapie kupe wcisnij USE (domyslnie E)");
		ma_klase[id] = true;
		ilosc_kup[id] = 2;
	}
	
	return COD_CONTINUE;
}

public cod_class_disabled(id)
{
	ma_klase[id] = false;
	ilosc_kup[id] = 0	
}

public cod_class_skill_used(id)
{
	if(equali(mapname, "gg_", 3) || equali(mapname, "aim_", 4) || equali(mapname, "fun_", 4) || equali(mapname, "awp_", 4))
	{
		client_print(id, print_center, "Umiejetnosci klas nie sa dostepne w tym trybie gry !");
	}
	else
	{
		if (!ilosc_kup[id])
		{
			client_print(id, print_center, "Wykorzystales juz wszystkie kupy!");
			return PLUGIN_CONTINUE;
		}
	
		ilosc_kup[id]--;
	
		new Float:origin[3];
		entity_get_vector(id, EV_VEC_origin, origin);
		
		new ent = create_entity("info_target");
		entity_set_string(ent ,EV_SZ_classname, "sraka");
		entity_set_edict(ent ,EV_ENT_owner, id);
		entity_set_int(ent, EV_INT_movetype, MOVETYPE_TOSS);
		entity_set_origin(ent, origin);
		entity_set_int(ent, EV_INT_solid, SOLID_BBOX);
	
		entity_set_model(ent, model);
		entity_set_size(ent,Float:{-16.0,-16.0,0.0},Float:{16.0,16.0,2.0});
	
		drop_to_floor(ent);
	
		set_rendering(ent,kRenderFxNone, 0,0,0, kRenderTransTexture,80);
	
		ShowAmmo(id);
		emit_sound(id, CHAN_VOICE, "QTM_CodMod/fart.wav", 0.6, ATTN_NORM, 0, PITCH_NORM)
		//emit_sound(id, CHAN_AUTO, "QTM_CodMod/fart.wav", VOL_NORM, ATTN_NORM, ( 1<<5 ), PITCH_NORM)
	}
	
	return PLUGIN_CONTINUE
}

public DotykMiny(ent, id)
{
	if(!is_valid_ent(ent))
		return PLUGIN_CONTINUE;
		
	new attacker = entity_get_edict(ent, EV_ENT_owner);
	if (get_user_team(attacker) != get_user_team(id))
	{
		new Float:fOrigin[3];
		entity_get_vector( ent, EV_VEC_origin, fOrigin);
	
		/*new iOrigin[3];
		for(new i=0;i<3;i++)
			iOrigin[i] = floatround(fOrigin[i]);
		
		message_begin(MSG_BROADCAST,SVC_TEMPENTITY, iOrigin);
		write_byte(TE_EXPLOSION);
		write_coord(iOrigin[0]);
		write_coord(iOrigin[1]);
		write_coord(iOrigin[2]);
		write_short(sprite_blast);
		write_byte(32); 
		write_byte(20); 
		write_byte(0);
		message_end();*/
		
		new entlist[33];
		new numfound = find_sphere_class(ent,"player", 40.0 ,entlist, 32);
		
		for (new i=0; i < numfound; i++)
		{		
			new pid = entlist[i];
			
			if (!is_user_alive(pid) || get_user_team(attacker) == get_user_team(pid))
				continue;
				
			cod_inflict_damage(attacker, pid, 45.0, 1.0, ent, (1<<24));
			emit_sound(id, CHAN_VOICE, "QTM_CodMod/fart_long.wav", 0.6, ATTN_NORM, 0, PITCH_NORM)
			//emit_sound(id, CHAN_AUTO, "QTM_CodMod/fart_long.wav", VOL_NORM, ATTN_NORM, ( 1<<5 ), PITCH_NORM)
			COD_MSG_NEWS_N;
			show_hudmessage(pid, "Wlazles w kupe !^nPatrz pod nogi");
		}
		remove_entity(ent);
	}
	return PLUGIN_CONTINUE;
}

public ResetHUD(id)
{
	ilosc_kup[id] = 2;
}
public TakeDamage(this, idinflictor, idattacker, Float:damage, damagebits)
{
	if(equali(mapname, "gg_", 3) || equali(mapname, "aim_", 4) || equali(mapname, "fun_", 4) || equali(mapname, "awp_", 4))
		return HAM_IGNORED;
		
	if(!is_user_connected(idattacker))
		return HAM_IGNORED;
		
	if(ma_klase[idattacker] && get_user_weapon(idattacker) == CSW_KNIFE)
		cod_inflict_damage(idattacker, this, 10.0, 0.0, idinflictor, damagebits);
		
	return HAM_IGNORED;
}

public DeathEvent()
{
	new vid = read_data(2);
	set_task(5.0, "Usun", vid);
}

public Usun(id)
{
	new ent	    
	while((ent = fm_find_ent_by_owner(ent, "sraka", id)) != 0)
		remove_entity(ent)
}


public client_disconnect(id)
{
	new entkupa = find_ent_by_class(0, "sraka");
	while(entkupa > 0)
	{
		if(entity_get_edict(entkupa, EV_ENT_owner) == id)
			remove_entity(entkupa);
		entkupa = find_ent_by_class(entkupa, "sraka");
	}

}

public NowaRunda()
{
	new entkupa = find_ent_by_class(-1, "sraka");
	while(entkupa > 0)
	{
		remove_entity(entkupa);
		entkupa = find_ent_by_class(entkupa, "sraka");
	}       
}

ShowAmmo(id)
{ 
    new ammo[51] 
    formatex(ammo, 50, "Liczba Kup: %i/2",ilosc_kup[id])

    message_begin(MSG_ONE, get_user_msgid("StatusText"), {0,0,0}, id) 
    write_byte(0) 
    write_string(ammo) 
    message_end() 
} 
