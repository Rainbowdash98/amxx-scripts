/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <torreinc>
#include <engine>

#define PLUGIN "[2k] Bots"
#define VERSION "1.4"
#define AUTHOR "QTM. Peyote & =ToRRent="

new use_class_skill;

new kamilka, jozek, mirek, /*olga, */halina;

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_event("ResetHUD", "ResetHUD", "abe");
	set_task(1.0, "GetPluginsIds");
}

public GetPluginsIds()
{
	kamilka = cod_get_classid("Kamilka");
	jozek = cod_get_classid("Jozek");
	mirek = cod_get_classid("Mirek");
	//olga = cod_get_classid("Olga");
	halina = cod_get_classid("Halina");
	use_class_skill = CreateMultiForward("EmitSound", ET_CONTINUE, FP_CELL, FP_CELL, FP_STRING);
}

public ResetHUD(id)
{
	if(!is_user_bot(id))
		return;
		
	if(!cod_get_user_class(id))
		cod_set_user_class(id, random_num(1, cod_get_classes_num()-1), 1);
	
	new points, random_points;
	while((points = cod_get_user_points(id)))
	{
		random_points = random_num(1, points);
		switch(random_num(0,6))
		{
			case 0: cod_points_to_health(id, random_points);
			case 1: cod_points_to_intelligence(id, random_points);
			case 2: cod_points_to_trim(id, random_points);
			case 3: cod_points_to_stamina(id,random_points);
			case 4: cod_points_to_gravity(id, random_points);
			case 5: cod_points_to_reload(id, random_points);
			case 6: cod_points_to_regeneration(id, random_points);
		}
	}
}
public client_PreThink(id)
{
	if(!is_user_bot(id) || !is_user_alive(id))
		return;
	
	new player_class = cod_get_user_class(id);
	
	new target, body, team = get_user_team(id);
			
	if(player_class == kamilka)
	{
		if(get_user_health(id) < 35)
			UzyjUmiejetnosci(id);
	}
	if(player_class == jozek)
	{
		get_user_aiming(id, target, body, 1100);
		if(team != get_user_team(target) && is_user_alive(target))
			UzyjUmiejetnosci(id);
	}
	if(player_class == mirek)
	{
		get_user_aiming(id, target, body, 1000);
		if(team != get_user_team(target) && is_user_alive(target))
			UzyjUmiejetnosci(id);
	}
	/*if(player_class == olga)
	{
		get_user_aiming(id, target, body, 2000);
		if(team != get_user_team(target) && is_user_alive(target))
			UzyjUmiejetnosci(id);
	}*/
	if(player_class == halina)
	{
		get_user_aiming(id, target, body, 800);
		if(team != get_user_team(target) && is_user_alive(target))
			UzyjUmiejetnosci(id);
	}
}

public UzyjUmiejetnosci(id)
{
	new ret;
	ExecuteForward(use_class_skill, ret, id, 0, "common/wpn_denyselect.wav");
}
